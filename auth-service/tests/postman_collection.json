{
	"info": {
		"_postman_id": "5fcfa261-ab05-47be-9b06-67df3a470d66",
		"name": "Heligram",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "1.Register",
					"item": [
						{
							"name": "200 Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "733e122e-4dac-4cd6-9e7d-fce341b9768a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.expect(pm.response.code).to.equal(201);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    const response = pm.response.json();",
											"    ",
											"    pm.expect(response.data.type).to.equal('users');",
											"    pm.expect(response.data.attributes).to.have.property('email');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\": {\n\t\t\"type\": \"users\",\n\t\t\"attributes\": {\n\t\t\t\"email\": \"{{email}}\",\n\t\t\t\"password\": \"{{password}}\"\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{endpoint}}/users",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 User Exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "733e122e-4dac-4cd6-9e7d-fce341b9768a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"Error is formated correctly\", function () {",
											"    const response = pm.response.json();",
											"    pm.expect([response.error]).to.be.an('array').that.is.not.empty;",
											"    pm.expect(response.errors[0]).to.have.property('code', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('title', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('detail');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\": {\n\t\t\"type\": \"users\",\n\t\t\"attributes\": {\n\t\t\t\"email\": \"{{email}}\",\n\t\t\t\"password\": \"{{password}}\"\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{endpoint}}/users",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "733e122e-4dac-4cd6-9e7d-fce341b9768a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"Error is formated correctly\", function () {",
											"    const response = pm.response.json();",
											"    pm.expect([response.error]).to.be.an('array').that.is.not.empty;",
											"    pm.expect(response.errors[0]).to.have.property('code', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('title', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('detail');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\": {\n\t\t\"type\": \"invalid-type\",\n\t\t\"attributes\": {\n\t\t\t\"email\": \"{{email}}\",\n\t\t\t\"password\": \"{{password}}\"\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{endpoint}}/users",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "2.Login",
					"item": [
						{
							"name": "200 Success-AccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e444f097-d678-4050-bba5-ea399b40d363",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    const response = pm.response.json();",
											"    pm.expect(response.data.attributes).to.have.property('accessToken');",
											"    pm.expect(response.data.attributes).to.have.property('expireAt');",
											"    ",
											"    ",
											"    pm.environment.set(\"token\", response.data.attributes.accessToken);",
											"    pm.environment.set(\"refreshToken\", response.data.attributes.refreshToken);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\": {\n\t\t\"type\": \"tokens\",\n\t\t\"attributes\": {\n\t\t\t\"grantType\": \"password\",\n\t\t\t\"email\": \"{{email}}\",\n\t\t\t\"password\": \"{{password}}\",\n\t\t\t\"scopes\": \"user:profile create:chat read:chat\"\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{endpoint}}/tokens",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 Success- RefreshToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e444f097-d678-4050-bba5-ea399b40d363",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    const response = pm.response.json();",
											"    pm.expect(response.data.attributes).to.have.property('accessToken');",
											"    pm.expect(response.data.attributes).to.have.property('expireAt');",
											"    ",
											"    ",
											"    pm.environment.set(\"token\", response.data.attributes.accessToken);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\": {\n\t\t\"type\": \"tokens\",\n\t\t\"attributes\": {\n\t\t\t\"grantType\": \"refreshToken\",\n\t\t\t\"refreshToken\": \"{{refreshToken}}\"\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{endpoint}}/tokens",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 Bad Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "733e122e-4dac-4cd6-9e7d-fce341b9768a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"Error is formated correctly\", function () {",
											"    const response = pm.response.json();",
											"    pm.expect([response.error]).to.be.an('array').that.is.not.empty;",
											"    pm.expect(response.errors[0]).to.have.property('code', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('title', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('detail');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\": {\n\t\t\"email\": \"hai\",\n\t\t\"password\": \"123\"\n\t}\n}"
								},
								"url": {
									"raw": "{{endpoint}}/tokens",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 Bad Request - Mismatched Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "733e122e-4dac-4cd6-9e7d-fce341b9768a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"Error is formated correctly\", function () {",
											"    const response = pm.response.json();",
											"    pm.expect([response.error]).to.be.an('array').that.is.not.empty;",
											"    pm.expect(response.errors[0]).to.have.property('code', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('title', 'BadRequestError');",
											"    pm.expect(response.errors[0]).to.have.property('detail', 'Password does not match.');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"data\": {\n\t\t\"type\": \"tokens\",\n\t\t\"attributes\": {\n\t\t\t\"grantType\": \"password\",\n\t\t\t\"email\": \"{{email}}\",\n\t\t\t\"password\": \"invalidPassword\",\n\t\t\t\"scopes\": \"user:profile create:chat read:chat\"\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{endpoint}}/tokens",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "200 Successs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e444f097-d678-4050-bba5-ea399b40d363",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Response is correct\", function () {",
									"    const response = pm.response.json();",
									"    ",
									"    pm.expect(response.data.attributes).to.have.property('email');",
									"    pm.expect(response.data.attributes).to.have.property('scopes');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}