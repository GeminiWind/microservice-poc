input {
  beats {
      port => 5044
  }
}

filter {
  if "access.log" in [log][file][path] {
    grok {
      match => [ "message" , "%{COMBINEDAPACHELOG}"]
      overwrite => [ "message" ]
    }
    mutate {
      convert => ["response", "integer"]
      convert => ["bytes", "integer"]
      convert => ["responsetime", "float"]
    }
    geoip {
      source => "clientip"
      target => "geoip"
      add_tag => [ "nginx-geoip" ]
    }
    date {
      match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
      remove_field => [ "timestamp" ]
    }
    useragent {
      source => "agent"
    }
  } else if "app.log" in [log][file][path] {
    grok {
      match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] \[%{LOGLEVEL:log-level}\] %{DATA:category} - %{GREEDYDATA:message}" }
      overwrite => ["message"]
    }
  }
}

output {
  if "access.log" in [log][file][path] {
     elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "access_log"
      user     => "elastic"
      password => "admin"
    }
  } else if "app.log" in [log][file][path] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "app_log"
      user     => "elastic"
      password => "admin"
    }
  }
 stdout { codec => rubydebug }
}