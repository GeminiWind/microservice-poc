user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}

http {
	log_format  main  '$remote_addr - $remote_user [$time_local] '
        '$request_uri $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent"'
	access_log  /var/log/nginx/access.log  main;

  map $http_x_request_id $x_request_id {                                                 
    default   $http_x_request_id;                                               
    ""        $request_id;                                                      
  }
  
  upstream auth_upstream {
		server auth-service:3002;
	}

  upstream order_upstream {
		server order-service:3003;
	}

  server {
    listen 80;
    server_name  microservice.example;

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
    text/plain
    text/css
    text/js
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/vnd.api+json
    application/xml
    application/rss+xml
    image/svg+xml;

    location = /auth {
      internal;
      proxy_pass http://auth_upstream/auth;	# authentication server
      proxy_pass_request_body off;				# no data is being transferred...
      proxy_set_header Content-Length "";
      proxy_set_header Host $host;				# Custom headers with authentication related data
      proxy_set_header X-Origin-URI $request_uri;
      proxy_set_header X-Request-ID $x_request_id;
    }

    location /oauth/token {
      rewrite ^/oauth/token/(.*) /$1  break;
      proxy_pass http://auth_upstream/oauth/token;	# authentication server
      proxy_redirect off;
      proxy_set_header X-Request-ID $x_request_id;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /users {
      rewrite ^/users/(.*) /$1  break;
      proxy_pass http://auth_upstream/users;	# authentication server
      proxy_redirect off;
      proxy_set_header X-Request-ID $x_request_id;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /orders/ {
      rewrite /orders/(.*) /$1  break;
      auth_request /auth;		# The sub-request to use
      auth_request_set $username $upstream_http_x_useremail;	# Make the sub request data available
      proxy_pass http://order_upstream;	# actual location of protected data
      proxy_redirect     off;
      proxy_set_header X-Remote-User $username;
      proxy_set_header X-Request-ID $x_request_id;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}
