version: '3.1'

services:
  api-gateway:
    container_name: api-gateway
    image: nginx:latest
    volumes: 
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - microservice
    depends_on: 
      - auth-service
      - order-service
  # SERVICES
  registry-service:
    container_name: registry-service
    build:
      context: ./registry-service
    volumes: 
      - ./registry-service/services.json:/usr/app/services.json
    networks:
      - microservice
  storage-service:
    container_name: storage-service
    build:
      context: ./storage-service
    environment: 
      DB_HOST: database
      DB_PORT: 27017
      DB_NAME: ${DB_NAME:-database}
      DB_MAIN_TABLE: ${DB_MAIN_TABLE:-main}
      WAIT_HOSTS: database:27017, registry-service:3000
      # DB_ROOT_USERNAME: admin
      # DB_ROOT_PASSWORD: admin
    depends_on:
      - database
    networks:
      - microservice
  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
    environment: 
      SECRET_KEY: ${SECRET_KEY:-2mHMHkCw10a1MKlTv8jiP60BFNKhbr8Fy1cIWQlqzAIEPDYIF3}
      WAIT_HOSTS: storage-service:3001
    depends_on:
      - storage-service
    networks:
      - microservice
  order-service:
    container_name: order-service
    build:
      context: ./order-service
    networks:
      - microservice
    # DEPENDENCIES
  database:
    image: mongo:latest
    # environment: 
    #   MONGO_INITDB_ROOT_USERNAME: admin
    #   MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - microservice

networks:
  microservice:
    driver: bridge